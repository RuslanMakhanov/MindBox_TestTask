apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-app
  labels:
    app: web-app
spec:
  replicas: 3  # 3 пода, так как этого достаточно для стабильной нагрузки
  selector:
    matchLabels:
      app: web-app
  template:
    metadata:
      labels:
        app: web-app
    spec:
      containers:
      - name: web-app
        image: your-app-image:latest  # Используем нужный Docker-образ
        resources:
          requests:
            memory: "128Mi"  # Запрос минимального объема памяти
            cpu: "0.1"       # Запрос на 0.1 CPU для ровной нагрузки
          limits:
            memory: "128Mi"  # Лимит памяти 128Mi для экономии ресурсов
            cpu: "0.5"       # Лимит CPU выше для более ресурсоемкого старта приложения
        ports:
        - containerPort: 80  # Пример порта, измените на реальный
        readinessProbe:  # Проба на готовность, под начнет принимать запросы после успешного старта
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 10  # Время для инициализации приложения
          periodSeconds: 5
          failureThreshold: 3
        livenessProbe:  # Проба на живучесть для перезапуска пода, если он "завис"
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 5
      affinity:  # Анти-афинити для распределения подов по разным нодам
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - web-app
            topologyKey: "kubernetes.io/hostname"  # Размещение подов на разных нодах
      topologySpreadConstraints:  # Для равномерного распределения подов по нодам
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: web-app
      restartPolicy: Always  # Политика перезапуска для обеспечения доступности

